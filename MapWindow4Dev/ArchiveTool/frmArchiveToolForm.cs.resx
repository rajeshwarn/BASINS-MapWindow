<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRestoreTo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAScwAA
        EnMBjCK5BwAAAIVJREFUOE+9UkEOwCAI8/+f3iYKaytm7CKJ0QRaaqG1g3E9vfopBRbbe4QR6CHCpXgi
        CSRkQWAdMKlgzJse+FKAXSKCnVRvIlAgdCBlSOIE8O+ZnkbtOqsH4W5FdqaguziGRPdraKYExslTYC9W
        kgyIiwBKGPwFJJLN5pVW2Itw834Bzxffu39np1eADJUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnOpenArchive.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAScwAA
        EnMBjCK5BwAAAIVJREFUOE+9UkEOwCAI8/+f3iYKaytm7CKJ0QRaaqG1g3E9vfopBRbbe4QR6CHCpXgi
        CSRkQWAdMKlgzJse+FKAXSKCnVRvIlAgdCBlSOIE8O+ZnkbtOqsH4W5FdqaguziGRPdraKYExslTYC9W
        kgyIiwBKGPwFJJLN5pVW2Itw834Bzxffu39np1eADJUAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAA
        AAA5AAAAShAAAGsQAAB7EAAAhBAAAIwQAABjIQAAjCEAAJQpAACUMQAApTEAAK05AACtQgAAtUIAAMZK
        AADGUgAAzlIAAMZjAADOYwAA1mMAAM5rAADWawAA52sAAOdzAADvcwAA73sAAPd7AAD3hAAA/4QAAP+M
        AAD/lAAAQiEIAEohCABrKQgAczEIAHs5CACEOQgAjEIIAM5zCAD/lAgA/6UIAFIpEACUShAAznMQAPeU
        EAD/pRAApUohALVSIQDOcyEA1nshAOeEIQDvjCEA/60hAGM5KQB7QikAznMpAM57KQD3lCkA/60pAK1S
        MQD/tTEAlFI5ALVjOQC1azkA/7U5AJRjQgCtY0IAtWtCAL1zQgDnlEIA/7VCALVrSgC1c0oAvXtKAIxr
        UgCtc1IAvXNSAL17UgDGhFIA1oxSAHtrYwC9e2MAzoxjANaUYwC9hGsAzpRrANalawD/xmsApYRzALWE
        cwC9hHMAxoxzAIyEewCUhHsArYR7AL2MewDGjHsAzpR7AOetewD/xnsAa3OEAIyEhADOlIQAzqWEAOe1
        hAAASowAc4SMAM6ljADOrYwA1q2MAP/OjABKc5QAvaWUANatlADWtZQA57WUAOe9lADvvZQA78aUAPfG
        lAD3zpQACGOlAAhrpQBKe6UAY4SlANa1pQDnvaUA98alAGuMrQBzjK0A1r2tAOe9rQD3zq0Azr21AOe9
        tQDnxrUA9861AOfGvQDnzr0A7869APfOvQD31r0Ac6XGAM7GxgDvzsYA79bGAOfOzgDv1s4A79bWAO/n
        1gD35+cA9+/nAP/v5wD37+8A9/fvAP/37wD/AP8A////AAAAAAD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8Anp6enp6enp6enp6enp6enp6enp5YCgUFAiFQXp6enp6enp5eDBI+kYeCUTsFBp6enp5eDBUS
        Q5OJg3FrW0uenp6eDhcWFUiVimBnW2dLnp6eng8ZFxZNlpJ6aW9rS56enp4PGxcXH5eVk4mCcUuenp6e
        EBsZFymWlpSKh31mnp6enhIdGyyXjYR0RAAgPZ6enp4SHRssnZaEhExULyKenp6eFCwdG4p0YWZra04j
        np6enhQtHR2Wk2pkWWtOI56enp4rOiwelpaRioJ9UySenp6eMEAtJ5eWk4qDglYlnp6enjhXeJGKiXNt
        TzcQSJ6enp6eXltbUVFUUV9enp6env/////wD///4AP//8AD///AA///wAP//8AD///AA///wAP//8AD
        ///AA///wAP//8AD///AA///wAP//+AP//8=
</value>
  </data>
</root>