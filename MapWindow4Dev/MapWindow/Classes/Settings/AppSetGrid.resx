<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BackgroundColor" xml:space="preserve">
    <value>Default map Background Color</value>
  </data>
  <data name="BackgroundColorDescription" xml:space="preserve">
    <value>The background color of the map view. This setting will be applied to all MapWindow projects.</value>
  </data>
  <data name="DebugLog" xml:space="preserve">
    <value>Debug Log</value>
  </data>
  <data name="DebugLogCategory" xml:space="preserve">
    <value>Debug Log file</value>
  </data>
  <data name="ShapeFileCategory" xml:space="preserve">
    <value>Shapefile Options</value>
  </data>
  <data name="DebugLogDescription" xml:space="preserve">
    <value>Sets the location for a debug log to be written. If blank (empty) no log will be written. Log messages are written using MapWinUtility.Logger.</value>
  </data>
  <data name="DisplayOptionsCategory" xml:space="preserve">
    <value>Display Options</value>
  </data>
  <data name="DisplayWelcome" xml:space="preserve">
    <value>Display Welcome Screen?</value>
  </data>
  <data name="DisplayWelcomeDescription" xml:space="preserve">
    <value>Sets whether the welcome screen should be displayed when starting MapWindow.</value>
  </data>
  
  <data name="DisplayDynVisWarning" xml:space="preserve">
    <value>Show Dynamic Visibility Warnings?</value>
  </data>
  <data name="DisplayDynVisWarningDescription" xml:space="preserve">
    <value>Sets whether dynamic visibility warnings will be shown when turning off a layer with dynamic visilbility set.</value>
  </data>
  <data name="ShowLayerAfterDynVis" xml:space="preserve">
    <value>Show Layer After Dynamic Visibility?</value>
  </data>
  <data name="ShowLayerAfterDynVisDescription" xml:space="preserve">
    <value>Sets whether the layer will be shown or hidden after turning off Dynamic Visibility.</value>
  </data>
  
  <data name="ESRIBehavior" xml:space="preserve">
    <value>ArcInfo Grid Loading Behavior</value>
  </data>
  <data name="ESRIBehaviorDescription" xml:space="preserve">
    <value>Determines whether an ESRI ArcInfo grid should be loaded as a grid or as an image.</value>
  </data>
  <data name="FileFormatCategory" xml:space="preserve">
    <value>File Formats</value>
  </data>
  <data name="GeoTIFFAndImgBehavior" xml:space="preserve">
    <value>TIFF/IMG/DEM Loading Behavior</value>
  </data>
  <data name="GeoTIFFAndImgBehaviorDescription" xml:space="preserve">
    <value>Determines whether a TIFF, IMG or DEM file should be loaded as a grid or as an image, or automatically determined.</value>
  </data>
  <data name="LabelsUseProjectLevel" xml:space="preserve">
    <value>Project-Level Labels</value>
  </data>
  <data name="LabelsUseProjectLevelDescription" xml:space="preserve">
    <value>Determines whether labels are loaded from and saved to a project-specific label file or from a shapefile-specific label file. Using a project-level label file will create a new subdirectory with the project's name.</value>
  </data>
  <data name="LanguageSettingsCategory" xml:space="preserve">
    <value>Language Settings</value>
  </data>
  <data name="Locale" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LocaleDescription" xml:space="preserve">
    <value>User-specified language to use in MapWindow. This change will take effect after restarting MapWindow.</value>
  </data>
  <data name="MapBehaviorCategory" xml:space="preserve">
    <value>Map Behavior</value>
  </data>
  
  <data name="MouseWheelZoom" xml:space="preserve">
    <value>Mouse Wheel Zoom</value>
  </data>
  <data name="MouseWheelZoomDescription" xml:space="preserve">
    <value>Controls the direction of zoom when the mouse wheel is used (or none).</value>
  </data>
  
  <data name="DisplayMapWindowVersion" xml:space="preserve">
    <value>Display MapWindow Version</value>
  </data>
  <data name="DisplayMapWindowVersionDescription" xml:space="preserve">
    <value>Sets whether the MapWindow version should be displayed when starting MapWindow.</value>
  </data>

  <data name="DisplayFloatingScalebar" xml:space="preserve">
    <value>Display Floating Scalebar</value>
  </data>
  <data name="DisplayFloatingScalebarDescription" xml:space="preserve">
    <value> Sets whether the floating scalebar should be displayed when starting MapWindow.</value>
  </data>

  <data name="DisplayRedrawSpeed" xml:space="preserve">
    <value>Display Redraw Speed</value>
  </data>
  <data name="DisplayRedrawSpeedDescription" xml:space="preserve">
    <value> Sets whether show/hide the redraw speed label when starting MapWindow.</value>
  </data>

  <data name="Display AvoidCollision" xml:space="preserve">
    <value>Avoid Collisions</value>
  </data>
  <data name="DisplayAvoidCollisionDescription" xml:space="preserve">
    <value> Sets whether avoid the collision when starting MapWindow.</value>
  </data>

  <data name="DisplayAutoCreatespatialindex" xml:space="preserve">
    <value>Display Auto Create SpatialIndex</value>
  </data>
  <data name="DisplayAutoCreatespatialindexDescription" xml:space="preserve">
    <value> Sets whether the auto create spatial index when starting MapWindow.</value>
  </data>
    
  
  <data name="OverrideSystemLocale" xml:space="preserve">
    <value>Enable user-specified language</value>
  </data>
  <data name="OverrideSystemLocaleDescription" xml:space="preserve">
    <value>Override the system regional and language settings. This change will take effect after restarting MapWindow.</value>
  </data>
  <data name="ResizeBehavior" xml:space="preserve">
    <value>Resize Behavior</value>
  </data>
  <data name="ResizeBehaviorDescription" xml:space="preserve">
    <value>Controls how the map contents will behave when the window is resized.</value>
  </data>
  <data name="SaveShapeSettings" xml:space="preserve">
    <value>Save Shape-level Settings</value>
  </data>
  <data name="SaveShapeSettingsDescription" xml:space="preserve">
    <value>Sets whether any shape-level formatting should be saved in the project file/shape properties file.</value>
  </data>
  <data name="TransparentSelection" xml:space="preserve">
    <value>Transparent Selection</value>
  </data>
  <data name="TransparentSelectionDescription" xml:space="preserve">
    <value>Indicates whether selected shapes should be shown as transparent.</value>
  </data>
  <data name="WelcomeScreenCategory" xml:space="preserve">
    <value>Welcome Screen</value>
  </data>
</root>